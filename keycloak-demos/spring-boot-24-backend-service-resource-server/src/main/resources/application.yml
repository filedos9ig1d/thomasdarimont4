spring:
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      # deals with single and multi-valued JWT claims
      accept-single-value-as-array: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${springkeycloak.auth.jwt.issuerUri}
          jwk-set-uri: ${springkeycloak.auth.jwt.issuerUri}/protocol/openid-connect/certs
          # Use mock-service jwks-endpoint to obtain public key for testing
          # jwk-set-uri: http://localhost:9999/jwks
      client:
        registration:
          self:
            provider: keycloak
            clientId: ${springkeycloak.auth.jwt.clientId}
            clientSecret: ${springkeycloak.auth.jwt.clientSecret}
            authorizationGrantType: client_credentials
        provider:
          keycloak:
            issuerUri: ${springkeycloak.auth.jwt.issuerUri}

server:
  port: 30001

logging:
  level:
    org:
      springframework:
        security: INFO
    root: INFO

springkeycloak:
  auth:
    jwt:
      issuerUri: http://sso.tdlabs.local:8899/u/auth/realms/acme
      clientId: app-backend-springboot-oauth2
      clientSecret: c3903802-7ba5-47f8-ab78-9782b67f0be6
      allowedAudiences:
        - "app-backend-springboot-oauth2"
        - "app-cli"

